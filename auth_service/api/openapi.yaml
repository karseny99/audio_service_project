openapi: 3.0.0
info:
  title: API auth service
  version: 1.0.0

servers:
  - url: http://localhost:8080

security:
  - BearerAuth: []

paths:
  /auth/login:
    post:
      summary: Аутентификация пользователя и получение JWT-токена
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      summary: Регистрация нового пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Неверный запрос или пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: Имя пользователя
        password:
          type: string
          format: password
          description: Пароль
      required:
        - username
        - password
      additionalProperties: false

    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          description: Имя пользователя
        password:
          type: string
          format: password
          minLength: 8
          description: Пароль (мин. 8 символов)
        email:
          type: string
          format: email
          description: Email адрес
      required:
        - username
        - password
        - email
      additionalProperties: false

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT-токен для доступа к защищенным ресурсам
        user_id:
          type: integer
          format: int64
          description: Уникальный идентификатор пользователя

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Тип ошибки
        message:
          type: string
          description: Детальное описание ошибки
      required:
        - error
        - message