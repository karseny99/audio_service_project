services:
  gateway:
    build: ./gateway
    environment:
      - PYTHONPATH=/app
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: poetry run uvicorn main:app --app-dir src --host 0.0.0.0 --port 8000 --reload

    volumes:
      - ./gateway:/app
    ports:
      - '8000:8000'
    depends_on:
      - kafka

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: audio_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql 

  # Zookeeper (обязателен для Kafka)
  zookeeper:
    image: bitnami/zookeeper:3.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_SERVER_ID: 1
      ZOO_SERVERS: "zookeeper:2888:3888"
      ZOO_4LW_COMMANDS_WHITELIST: "mntr,ruok"
    volumes:
      - zookeeper_data:/bitnami
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s

  kafka:
    image: bitnami/kafka:3.4
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"  # Отключаем автосоздание топиков Kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_BROKER_ID: 1
    volumes:
      - kafka_data:/bitnami
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server kafka:9092 || exit 1"]
      interval: 15s
      timeout: 20s
      retries: 15
      start_period: 45s

  kafka-init:
    image: bitnami/kafka:3.4
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./init-kafka-topics.sh:/init-kafka-topics.sh
    entrypoint: ["/bin/bash", "/init-kafka-topics.sh"]


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - kafka

volumes:
  zookeeper_data:
  kafka_data:
  postgres_data: